@model TimeSheet.Models.Sheet
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<nav class="navbar navbar-fixed-top navbar-inverse" role="navigation">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/Home/">RDSS Timesheet</a>
    </div>
    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse navbar-ex1-collapse">
        <ul class="nav navbar-nav">
            <li><a href="#about">About</a></li>
            <li><a href="#services">Services</a></li>
            <li><a href="#contact">Contact</a></li>
        </ul>
        <ul class="nav navbar-nav pull-right">
            <li><a href="#"><i class="icon-user icon-white"></i> @Model.User</a></li>
            <li><a href="#"><i class="icon-question icon-white"></i></a></li>
        </ul>
    </div>
    <!-- /.navbar-collapse -->
</nav>
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <form class="form-horizontal" id="sheetform">
                <div class="form-group">
                    <label class="control-label col-md-3">Employee</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.employee.FirstName @Model.employee.LastName</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">Number</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.employee.EmployeeNumber</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">Period Ending</label>
                    <div class="col-md-6">
                        <input type="text" class="datepicker input-sm form-control" id="periodEnding" placeholder="on a Sunday">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">Week</label>
                    <button class="btn btn-success col-md-1" id="priorsheet">
                        <i class="icon-step-backward icon-large"></i>
                    </button>
                    <div class="col-md-1">
                        <h4 id="weeknumber" class="form-control-static">@Model.weekNumber</h4>
                    </div>
                    <button class="btn btn-success col-md-1" id="nextsheet">
                        <i class="icon-step-forward icon-large"></i>
                    </button>
                </div>
            </form>
        </div>
        <div class="col-md-6">
            @using (Html.Bootstrap().Begin(new Table().Caption("Hours Summary").Condensed().Class("pull-right hoursum")))
            {
                <tr><td>Demand</td><td>@Model.Stats[0]</td></tr>
                <tr><td>Non-Demand</td><td>@Model.Stats[1]</td></tr>
                <tr><td>Overtime</td><td>@Model.Stats[2]</td></tr>
                <tr><td><b>Total</b></td><td><b>@Model.Stats[3]</b></td></tr>
            }
        </div>
    </div>
</div>
<div id="content">
    <table id="week" class="table table-striped @(Model.Submitted?"":"table-hover") table-condensed table-bordered">
        <thead>
            <tr class="sheetline">
                <th class="addbutton" colspan="4">
                    @if (!Model.Submitted)
                    {
                        <button class="btn btn-success btn-mini pull-left" id="addline">
                            <i class="icon-plus icon-white"></i> New Row
                        </button>
                    }
                </th>
                @Html.DisplayFor(m => m.Headers)
                <th><i class="icon-sitemap"></i></th>
                <th class="submitbutton" colspan="5">
                    @if (Model.hours.Count() > 0 && !Model.Submitted)
                    {
                        using (Html.Bootstrap().Begin(new Form("Submit", "Home").Id("submitsheet").Type(FormType.Horizontal)))
                        {
                            @Html.Hidden("id", Model.employee.WorkerId)
                            @Html.Hidden("week", Model.weekNumber)
                            <button class="btn btn-danger btn-mini pull-right" id="submitsheetbtn">
                                <i class="icon-power-off icon-white"></i> Submit
                            </button>
                        }
                    }
                </th>
            </tr>
            <tr id="sheetrow">
                <th title="Overtime"><i class="icon-time"></i></th>
                <th>Description</th>
                <th>Cust Acct</th>
                <th>GL Acct</th>
                <th class="day">@Model.Stats[4]</th>
                <th class="day">@Model.Stats[5]</th>
                <th class="day">@Model.Stats[6]</th>
                <th class="day">@Model.Stats[7]</th>
                <th class="day">@Model.Stats[8]</th>
                <th class="day">@Model.Stats[9]</th>
                <th class="day">@Model.Stats[10]</th>
                <th class="day">@Model.Stats[3]</th>
                <th title="New Request"><i class="icon-asterisk"></i></th>
                <th>Customer</th>
                <th>WorkArea</th>
                <th>Partner</th>
                <th>Site</th>
            </tr>
        </thead>
        <tbody>
            @Html.DisplayFor(m => m.hours)
        </tbody>
    </table>
</div>

<div id="modal-target"></div>

@section scripts {
    <script type="text/javascript">
    var week, sheet, $cust, $desc, $partner, locked, normPos, overPos, atleast1;
    var sunday = '@Model.sunday';
    var empid = '@Model.employee.WorkerId';
    var rowmap = [];
    var pair = [];

    function switchUI() {
        if ($partner.find('option:selected').html() == 'RDSS') {
            $('.nondemand').parent().parent().css('display', 'block');
            $('.demand').parent().parent().css('display', 'none');
        }
        else {
            $('.nondemand').parent().parent().css('display', 'none');
            $('.demand').parent().parent().css('display', 'block');
        }
    }

    function getHours(hrs, mns) {
        hrs += Math.floor(mns / 60);
        mns %= 60;
        return hrs + ":" + (mns < 10 ? "0" : "") + mns;
    }

    function getMins(str) {
        var part = str.split(":");
        return parseInt(part[0]) * 60 + parseInt(part[1]);
    }

    function newWeek(next) {
        var days = next ? 7 : -7;
        var newSunday = new Date(sunday);
        newSunday.setDate(newSunday.getDate() + days);
        sunday = $.datepicker.formatDate('mm/dd/yy', newSunday);
        $('#periodEnding').val(sunday);
        week = $.datepicker.iso8601Week(newSunday);
        var url = '@Url.Action("Index", "Home", new { id = -1 })';
        console.log(url.replace('-1', week));
        location.href = url.replace('-1', week);
    }

    function resumLine(line) {
        var hrs = 0;
        var mns = 0;
        $('input[id^="' + line + '"]', 'tr.hourline').each(function () {
            hrs += Number($(this).val().substr(0, 2));
            mns += Number($(this).val().substr(3, 2));
        });
        $('#hrs' + line, 'tr.hourline').html(getHours(hrs, mns));
    }

    function sumhours(line) {
        var hrs = 0;
        var mns = 0;
        $('*[id]:not(hrsum)', line).each(function () {
            hrs += Number($(this).val().substr(0, 2));
            mns += Number($(this).val().substr(3, 2));
        });
        $('td.hrsum[id^="hrs"]', line).html(getHours(hrs, mns));
    }
    function clrhours() {
        $('[name=options]', $desc).val('');
        $('[name=options]', $cust).val('');
        //$desc.data('combobox').refresh();
        //$cust.data('combobox').refresh();
        $('#modaltitle').html('Add Hours');
        $('input', 'tr.hourline').val('');
        $('select option[value="0"]').attr('selected', true);
        $('td.hrsum[id^="hrs"]', 'tr.hourline').html('');
    }
    function popuploaded() {
        $('#weekline').modal('show');
        $('tr.hourline input').on('blur', function () {
            var newt = $(this).val().replace(/_/g, '0').split(':');
            var newhr = ($(this).val().charAt(1) == '_' && $(this).val().charAt(0) != '_') ? Number(newt[0].charAt(0)) : Number(newt[0]);
            var g = getHours(newhr, Number(newt[1]));
            g = g.length < 5 ? '0' + g : g;
            $(this).val(g);
        });
        $('input[id^="normal"]', 'tr.hourline').on('change', function (e) {
            resumLine("normal");
        });
        $('input[id^="overtime"]', 'tr.hourline').on('change', function (e) {
            resumLine("overtime");
        });
        $('#@Html.IdFor(m=>m.normal.PartnerId)').on('change', function () {
            switchUI();
        });
        $('#savehrs').on('click', function (e) {
            var $box = $('#@Html.IdFor(m=>m.normal.NewRequest)');
            $('#@Html.IdFor(m=>m.NewRequest)').val($box.prop('checked'));
            $('#weekline').modal('hide');
        });
        $('#deletehrs').on('click', function (e) {
            var normal = parseInt($('#@Html.IdFor(m=>m.normal.WeekId)').val());
            var overtime = parseInt($('#@Html.IdFor(m=>m.overtime.WeekId)').val());
            if (normal > overtime) {
                delWeek(normal, normPos);
                delWeek(overtime, overPos);
            }
            else {
                delWeek(overtime, overPos);
                delWeek(normal, normPos);
            }
        });
    }
    // Page loaded document ready
    $(function () {
        $('.datepicker').datepicker({
            beforeShowDay: function (date) { return [date.getDay() == 0, ""] }
            , firstDay: 1
        });
        $('.datepicker').on('change', function (e) {
            var test = new Date(e.target.value);
            if (test.getDay() != 0) {
                test.setDate(test.getDate() + 7 - test.getDay());
                e.target.value = $.datepicker.formatDate('mm/dd/yy', test);
            }
        });
        $('tr.sheetline').on('click', 'button#addline', function (e) {
            $('#modal-target').load('@Url.Action("Create","Home")');
        });

        $('#priorsheet').on('click', function (e) {
            e.preventDefault();
            newWeek(false);
        });
        $('#nextsheet').on('click', function (e) {
            e.preventDefault();
            newWeek(true);
        });

        week = @(Model.weekNumber) +0;

        $('#periodEnding').val('@Model.sunday');

        @if (!Model.Submitted) {
                <text>
        $('#week tbody').on('click', 'tr', function () {
            var id = $(this).data('id');
            var pairid = $(this).data('pairid');
            $.get('@Url.Action("Edit","Home",null,Request.Url.Scheme)/' + id + '/' + pairid, function (data) {
                $('#modal-target').replaceWith(data);
                popuploaded();
            });
        });
        </text>
            }
    });
</script>
}
